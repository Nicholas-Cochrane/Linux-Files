services:
  nginxproxymanager:
    image: 'jc21/nginx-proxy-manager:latest' 
    container_name: nginxproxymanager
    restart: unless-stopped 
    ports:
      - '80:80'
      - '81:81'
      - '443:443' 
    volumes:
      - /home/nicholas/docker_containers/nginx/data:/data
      - /home/nicholas/docker_containers/nginx/letsencrypt:/etc/letsencrypt 
    networks:
      - db-network
      - default
  
  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    user: 997:100
    environment:
      - TZ=America/Los_Angeles
    volumes:
      - ~/docker_containers/jellyfin/config:/config
      - ~/docker_containers/jellyfin/cache:/cache
      - ~/Torrents:/media:ro
      - /home/unencrypted_torrents:/unencrypted_media:ro
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
    #Notes: May need to line 
    #"Jellyfin.Networking.Manager.NetworkManager": "Warning"
    #to logging.json under "Serilogs": { "MinimumLevel": { "Default": "Information", "Override": {
    #to avoid spamming log file (docker compose logs -f)

  arch-torrent:
    image: binhex/arch-qbittorrentvpn:4.6.2-2-01
    container_name: qbittorrentvpn2
    privileged: true
    restart: unless-stopped
    environment:
      - VPN_ENABLED=yes
      - VPN_USER=$PIA_USERNAME
      - VPN_PASS=$PIA_PASSWORD
      - VPN_PROV=pia
      - VPN_CLIENT=openvpn
      - STRICT_PORT_FORWARD=yes
      - ENABLE_PRIVOXY=yes
      - WEBUI_PORT=8080
      - PUID=998
      - PGID=100
      - LAN_NETWORK=10.0.0.0/24
      - NAME_SERVERS=1.1.1.1,1.0.0.1
      - DAEMON_LOG_LEVEL=debug
      - DELUGE_WEB_LOG_LEVEL=debug
      - DELUGE_ENABLE_WEBUI_PASSWORD=yes
      - DEBUG=true
    cap_add:
      - NET_ADMIN
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ~/docker_containers/qbittorrent/config:/config #Remember to add openvpn opvn file (with out credentials added, use .evn)
      - ~/Torrents:/downloads
      - /home/unencrypted_torrents:/unencrypted_downloads #home dir encryption leads to 143 byte name limit vs 255 byte
    ports:
      - 8080:8080
      - 8118:8118
      - 6881:6881
      - 6881:6881/udp
    networks:
      - default

#  torrent:
#    image: markusmcnugen/qbittorrentvpn
#    container_name: qbittorrentvpn
#    privileged: true
#    environment:
#      - TZ=America/Los_Angeles
#      - PUID=998
#      - PGID=100
#      - WEBUI_PORT_ENV=8080
#      - INCOMING_PORT_ENV=8999
#      - VPN_ENABLED=yes
#      - LAN_NETWORK=10.0.0.0/24
#      - NAME_SERVERS=8.8.8.8,8.8.4.4
#    volumes:
#      - ~/docker_containers/qbittorent/config:/config #place vpn credentials in "config/openvpn/FILE_NAME.ovpn" under 'auth-user-pass'
#      - ~/Torrents:/downloads
#      - /home/unencrypted_torrents:/unencrypted_downloads #home dir encryption leads to 143 byte name limit vs 255 byte
#    ports:
#      - 8080:8080
#      - 8999:8999
#      - 8999:8999/udp
#    restart: unless-stopped


#
# The Firefly III Data Importer will ask you for the Firefly III URL and a "Client ID".
# You can generate the Client ID at http://localhost/profile (after registering)
# The Firefly III URL is: http://app:8080
#
# Other URL's will give 500 | Server Error
#

  firefly:
    image: fireflyiii/core:latest
    hostname: firefly
    container_name: firefly_iii_core
    networks:
      - firefly_iii
      - default
    restart: always
    volumes:
      - ~/docker_containers/firefly_iii_upload:/var/www/html/storage/upload
    env_file: .ff.env 
    environment:
      - UMASK=002
      - PUID=994
      - PGID=100
    ports:
      - '28081:8080'
    depends_on:
      - ffdb
  ffdb:
    image: mariadb
    hostname: ffdb
    container_name: firefly_iii_db
    networks:
      - firefly_iii
      - default
    restart: always
    env_file: .db.env
    environment:
      - UMASK=002
      - PUID=994
      - PGID=100
    volumes:
      - ~/docker_containers/firefly_iii_db:/var/lib/mysql

  importer:
    image: fireflyiii/data-importer:latest
    hostname: importer
    restart: always
    container_name: firefly_iii_importer
    networks:
      - firefly_iii
      - default
    ports:
      - '28082:8080'
    depends_on:
      - firefly
    env_file: .importer.env
    environment:
      - UMASK=002
      - PUID=994
      - PGID=100

  cron:
    #
    # To make this work, set STATIC_CRON_TOKEN in your .env file or as an environment variable and replace REPLACEME below
    # The STATIC_CRON_TOKEN must be *exactly* 32 characters long
    #
    image: alpine
    container_name: firefly_iii_cron
    restart: always
    command: sh -c "echo \"0 3 * * * wget -qO- http://firefly:8080/api/v1/cron/Ttj3ociwONQje0H2PtIPVjJdGXaGgAqn\" | crontab - && crond -f -L /dev/stdout"
    networks:
      - firefly_iii
      - default

networks:
  default:
    name: docker_containers_default
    driver: bridge
  db-network:
    name: db-network
    external: true
  firefly_iii:
    driver: bridge
